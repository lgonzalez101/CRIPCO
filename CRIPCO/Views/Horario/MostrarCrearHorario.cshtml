@model CRIPCO.Models.Horario.CrearHorarioViewModel

<style>
.nav-pills>li.active>a, .nav-pills>li.active>a:focus, .nav-pills>li.active>a:hover {
    background: #337ab7;
}
</style>

<div class="panel">
    <ul class="nav nav-pills">
        <li class="active"><a href="#default-tab-1" data-toggle="tab" aria-expanded="false">Horario Simple</a></li>
        <li class=""><a href="#default-tab-2" data-toggle="tab" aria-expanded="false">Rango de Horarios</a></li>    
    </ul>
    <div class="tab-content">
        <div class="tab-pane fade active in" id="default-tab-1">
            <h4 class="m-t-10 text-primary text-center"><i class="fa fa-clock-o"></i> Seleccione el Dia y la Hora: </h4>
            <hr />
            <div class="form-group">
                <div class="row" id="HorarioSimple">
                        <div id="FechaInicio"></div>
                </div>
            </div>
            <hr />
            <p class="text-right m-b-0">
                <a href="javascript:;" onclick="CrearHorarioSimple()" class="btn btn-success">Guardar Horario</a>
            </p>
        </div>
        <div class="tab-pane fade" id="default-tab-2">
                
            @*<div class="input-group" id="default-daterange">
                <input type="text" name="default-daterange" class="form-control" value="" placeholder="click to select the date range">
                <span class="input-group-btn">
                    <button class="btn btn-default" type="button"><i class="fa fa-calendar"></i></button>
                </span>
            </div>*@
     

            <div class="row row-space-10">
                <div class="col-md-6">
                    <label>Fecha Inicial</label>
                    <input type="text" class="form-control" id="RangoFechaInicio" placeholder="Min">
                </div>
                <div class="col-md-6">
                    <label>Fecha Final</label>
                    <input type="text" class="form-control" id="RangoFechaFinal" placeholder="Max">
                </div>
            </div>
            <hr />
            <div class="row row-space-10">
                <div class="col-md-6 text-center">
                    <label>Hora Inicial</label>
                    <div id="RangoHoraInicio"></div>
                </div>
                <div class="col-md-6 text-center">
                    <label>Hora Final</label>
                    <div id="RangoHoraFinal"></div>
                </div>
            </div>
            <hr />
            <p class="text-right m-b-0">
                <a href="javascript:;" onclick="CrearHorarioRango()" class="btn btn-success">Guardar Horario</a>
            </p>
       

        </div>
      
    </div>
</div>

<script>

    var FechaInicioSimple = $("#FechaInicio").datetimepicker({
        inline: true,
        sideBySide: true,
        format: 'dd/MM/yy H'
    });

   var RangoFechaInicial= $("#RangoFechaInicio").datetimepicker({
        format: 'DD/MM/YYYY',
        minDate: new Date(),
        date: new Date()
    });

   var RangoFechaFinal = $("#RangoFechaFinal").datetimepicker({
       format: 'DD/MM/YYYY',
       date: new Date(),
    });
    $("#RangoFechaInicio").on("dp.change", function (a) {
        $("#RangoFechaFinal").data("DateTimePicker").minDate(a.date)
    });
   $("#RangoFechaFinal").on("dp.change", function (a) {
        $("#RangoFechaInicio").data("DateTimePicker").maxDate(a.date)
    });

    ////////////////////////
   var RangoHoraInicial = $("#RangoHoraInicio").datetimepicker({
        format: 'H',
        inline: true
    });

   var RangoHoraFinal = $("#RangoHoraFinal").datetimepicker({
        format: 'H',
        inline: true
    });
    $("#RangoHoraInicio").on("dp.change", function (a) {
        $("#RangoHoraFinal").data("DateTimePicker").minDate(a.date)
    });
    $("#RangoHoraFinal").on("dp.change", function (a) {
        $("#RangoHoraInicio").data("DateTimePicker").maxDate(a.date)
    });


    $(document).ready(function () {
       
        $("#HorarioSimple .datepicker").attr("class", "datepicker col-md-7");
        $("#HorarioSimple .timepicker").attr("class", "timepicker col-md-5");
      
        //$("#default-daterange").daterangepicker({
        //    timePicker: true,
        //    alwaysShowCalendars : true,
        //    opens: "center",
        //    format: "MM/DD/YYYY",
        //    separator: " to ",
        //    startDate: moment().subtract(29, "days"),
        //    endDate: moment(),
        //    minDate: new Date(),
        //    //   maxDate: "12/31/2018"
        //}, function (a, b) {
        //    $("#default-daterange input").val(a.format("MMMM D, YYYY") + " - " + b.format("MMMM D, YYYY"))
        //});

      

    });



    function CrearHorarioSimple() {
        var obj = { FechaInicio: moment(FechaInicioSimple.data('DateTimePicker').date()).format("DD/MM/YY HH:mm") };

        LoadWaitNotification();
        $.ajax({
            url: "/Horario/CrearHorarioSimple",
            type: 'POST',
            data: { model: obj },
            success: function (data) {
                ShowNotification(data.Estado, data.Titulo, data.Mensaje);
                if (data.Estado) {
                    new $.fn.dataTable.Api("#IdTabla").ajax.reload();
                    $("#MyModal").modal("hide");
                }
            },
            error: function (xhr, textStatus, errorThrown) {
                alert(textStatus + " : problemas de red")
                UnloadWaitNotification();
            },
            complete: function () { UnloadWaitNotification(); }
        });


    }

    function CrearHorarioRango() {
        var obj = {
            FechaInicio: moment(RangoFechaInicial.data('DateTimePicker').date()).format("DD/MM/YY HH:mm"),
            FechaFinal: moment(RangoFechaFinal.data('DateTimePicker').date()).format("DD/MM/YY HH:mm"),
            HoraInicio: moment(RangoHoraInicial.data('DateTimePicker').date()).format("DD/MM/YY HH:mm"),
            HoraFinal: moment(RangoHoraFinal.data('DateTimePicker').date()).format("DD/MM/YY HH:mm"),
           
        };

        LoadWaitNotification();
        $.ajax({
            url: "/Horario/CrearRangoHorario",
            type: 'POST',
            data: { model: obj },
            success: function (data) {
                ShowNotification(data.Estado, data.Titulo, data.Mensaje);
                if (data.Estado) {
                    new $.fn.dataTable.Api("#IdTabla").ajax.reload();
                    $("#MyModal").modal("hide");
                }
            },
            error: function (xhr, textStatus, errorThrown) {
                alert(textStatus + " : problemas de red")
                UnloadWaitNotification();
            },
            complete: function () { UnloadWaitNotification(); }
        });


    }
</script>







@*@using (Html.BeginForm())
    {

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.IdUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IdUsuario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IdUsuario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FechaInicio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FechaFinal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FechaFinal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FechaFinal, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HoraInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HoraInicio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HoraInicio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HoraFinal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HoraFinal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HoraFinal, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@