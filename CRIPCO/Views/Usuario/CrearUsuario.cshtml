@model CRIPCO.Models.Usuario.CrearUsuarioViewModel

@{
    ViewBag.Title = "CrearUsuario";
}


<div class="row">
    <!-- begin col-2 -->
    <!-- end col-2 -->
    <!-- begin col-10 -->
    <div class="col-md-12 ui-sortable">
        <!-- begin panel -->
        <div class="panel panel-success">
            <div class="panel-heading">
                <div class="panel-heading-btn">
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand" data-original-title="" title="" data-init="true"><i class="fa fa-expand"></i></a>
                   
                </div>
                <h4 class="panel-title"> Crear Usuario</h4>
            </div>

            <div class="panel-body">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                     
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Identidad, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Identidad, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Identidad, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FechaNac, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FechaNac, new { htmlAttributes = new { @class = "form-control" , @Value = Model.FechaNac.ToString("dd/MMMM/yyyy") } })
                                @Html.ValidationMessageFor(model => model.FechaNac, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                     
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <a href="/Usuario/Index" class="btn btn-default"><i class="fa fa-arrow-left"></i> </a>
                                <input type="submit" value="Crear Usuario" class="btn btn-success" />
                     <button type="button" id="test">test</button>
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
        <!-- end panel -->
    </div>
    <!-- end col-10 -->
</div>

<div>
    @Html.ActionLink("Volver", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $("#FechaNac").datepicker({ format: 'dd/MM/yyyy' });
        $("#Telefono").mask("9999-9999");
        $("#Identidad").mask("9999-9999-99999");




        $("#test").click(function () {

          
            $.gritter.add({
                title: '<i class="fa fa-check fa-2x text-success fa-fw" ></i>    Mensaje a mostrar',
                //text: "Exito",
                //image: "~/assets/img/user-2.jpg",
                sticky: false,
                time: "",
                class_name: "my-sticky-class"
            });
         
          //  var mens = '<form class="form-horizontal form-bordered"><div class="form-group"><label class="control-label col-md-4"><i class="fa fa-times fa-3x text-danger fa-fw" ></i></label> <div class="col-md-8">' +
          //      '<span>Mensaje a mostrar</span>  </div></div>';
            var mens = '<label class="control-label col-md-4"><i class="fa fa-times fa-3x text-danger fa-fw" ></i></label><label class="control-label col-md-8"><span>Mensaje a mostrar</span></label>';
        $.gritter.add({
            title: '<i class="fa fa-times fa-2x text-danger fa-fw" ></i>  Mensaje a mostrar',
            //text: "Exito",
            //image: "~/assets/img/user-2.jpg",
            sticky: false,
            time: "",
            class_name: "my-sticky-class"
        });

        return false
      
        });
      
     
    </script>

}
