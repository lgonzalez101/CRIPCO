@model CRIPCO.Models.Usuario.CambiarContrasenaViewModel


@using (Html.BeginForm("ResetContrasena", "Usuario", FormMethod.Post, new { id = "FormContrasenaUsuario" }))
{

    <div class="form-horizontal">
       @Html.HiddenFor(model =>model.IdUser)

        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a class="btn btn-success" onclick="EditarContrasena()"> Cambiar Contrasena</a>
            </div>
        </div>
    </div>
}



@Scripts.Render("~/bundles/jqueryval")

<script>
      

    function EditarContrasena() {

        if (!$("#FormContrasenaUsuario").valid()) { return false; }

            LoadWaitNotification();
                $.ajax({
                    url: "/Usuario/ResetContrasena",
                    type: 'POST',
                    dataType: 'json',
                    data: $('#FormContrasenaUsuario').serialize(),
                    success: function (data) {

                        if (data.Estado) {
                            ShowNotification(data.Estado, data.Titulo, data.Mensaje);
                            new $.fn.dataTable.Api("#IdTabla").ajax.reload();
                            $("#MyModal").modal("hide");
                        } else ShowNotification(data.Estado, data.Titulo, data.Mensaje);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        alert(textStatus + ": error de red");
                        UnloadWaitNotification();
                    },
                    complete: function () { UnloadWaitNotification(); }
                });

        };




</script>
